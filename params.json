{"name":"Scanner.js","tagline":"scanner.js enables any web page to acquire images from scanners using JavaScript in most desktop browsers like IE, Chrome, Firefox and more. In most cases, software install is not required and the user can enjoy a great scanning experience.","body":"scanner.js\r\n==========\r\n\r\nscanner.js enables any web page to acquire images from scanners using JavaScript in most desktop browsers like IE, Chrome, Firefox and more. In most cases, software install is not required and the user can enjoy a great scanning experience.\r\n\r\n# WEB DEVELOPER’S GUIDE TO SCANNER.JS\r\nLast updated on Oct, 2014\r\n\r\n# Table of Contents\r\n1\tINTRODUCTION\t4\r\n1.1\tABOUT SCANNER.JS\t4\r\n1.2\tWHERE TO FIND SCANNER.JS\t4\r\n1.3\tTHE DEMO WEB PAGE\t4\r\n1.4\tSCREENSHOT\t5\r\n2\tSCANNER.JS IN ACTION\t6\r\n2.1\tADD SCANNER.JS SUPPORT\t6\r\n2.2\tOPENS THE SCAN DIALOG\t6\r\n2.3\tTHE USER SCANS AND EDITS IMAGES\t7\r\n2.4\tTHE DIALOG RETURNS\t9\r\n2.5\tUPLOAD THE IMAGES SCANNED THROUGH FORM\t11\r\n3\tADVANCED USAGES\t13\r\n3.1\tSIMPLE SCAN\t13\r\n3.2\tSCAN AND UPLOAD WITH THE SCAN DIALOG\t13\r\n3.3\tSCAN AND UPLOAD AS PDF\t14\r\n3.4\tSUPPORT FOR LEGACY BROWSERS\t15\r\n3.5\tFORCE TO RETURN IMAGE/THUMBNAIL AS URLS INSTEAD OF BASE64\t16\r\n4\tSUPPORT AND PROFESSIONAL SERVICES\t17\r\n4.1\tSUPPORT WEB SITE\t17\r\n4.2\tBASIC SUPPORT\t17\r\n4.3\tPROFESSIONAL SERVICES\t17\r\n\r\n\r\n\r\n\r\n\r\n# 1\tIntroduction\r\n1.1\tAbout scanner.js\r\nBascanner.js enables any web page to acquire images from scanners using JavaScript in most desktop browsers like IE, Chrome, Firefox and more. In most cases, software install is not required and the user can enjoy a great scanning experience.\r\n1.2\tWhere to find scanner.js\r\nhttp://direct.asprise.com/scan/javascript/base/scanner.js\r\nYou may copy this file to any host including any CDN (content delivery network) if you have a valid license.\r\n1.3\tThe demo web page\r\nhttp://direct.asprise.com/scan/javascript/base/scanner.js-demo.html\r\nSource code of the demo can be found at: https://github.com/Asprise/scanner.js/blob/master/scanner.js-demo.html\r\n1.4\tScreenshot\r\n \r\n\r\n\r\n\r\n# 2\tscanner.js In Action\r\nscanner.js allows any HTML/JavaScript developer to easily add document scanning, image editing and uploading functionality to add web page. \r\nWe’ll use the demo web page to explain how it works. The complete source code of the demo page is available at: https://github.com/Asprise/scanner.js/blob/master/scanner.js-demo.html \r\n## 2.1\tAdd scanner.js support\r\nAll pages that need to access scanners must import scanner.js:\r\n<script type=\"text/javascript\" src=\"http://direct.asprise.com/scan/javascript/base/scanner.js\"></script>\r\n## 2.2\tOpens the Scan Dialog\r\nThe user clicks on a button, which triggers the scan function in JavaScript:\r\n \r\n<button type=\"button\" onclick=\"scan();\">Scan</button>\r\nThe JavaScript scan method opens the scan dialog:\r\n<script type=\"text/javascript\" src=\"com-asprise-scan.js\"></script>\r\n\r\nfunction scan() {\r\n  com_asprise_scan_request(myCallBackFunc, // callback on dialog closed\r\ncom_asprise_scan_cmd_method_SCAN, // action: SCAN\r\ncom_asprise_scan_cmd_return_IMAGES_AND_THUMBNAILS, // return types\r\n{'wia-version': 2} // options\r\n  );\r\n}\r\nNote the above code specifies a callback function to accept images and/or thumbnails when the scan dialog closes. The source code of the callback function will be shown later.\r\n## 2.3\tThe User Scans and Edits Images\r\nThe following dialog will appear and the user can then use ‘Quick scan’ or ‘Scan’ button to acquire images from scanners:\r\n \r\nOnce an image is acquired, the user may edit it by click on the ‘Edit’ button on the top left of the image thumbnail:\r\n \r\nThe following image editing actions are support: crop, rotate, flip and scale.\r\n## 2.4\tThe Dialog Returns\r\nThe user may click ‘Use selected’ or ‘Cancel’ button to close the scan dialog:\r\n \r\nImmediately after the dialog is closed, the callback function will be called:\r\nfunction myCallBackFunc(success, mesg, thumbs, images) {\r\n  for(var i = 0; (images instanceof Array) && i < images.length; i++){\r\n    addImage(images[i], document.getElementById('images'));\r\n  }\r\n}\r\n\r\nvar imagesScanned = []; // global var to store all images scanned\r\n\r\nfunction addImage(imgObj, domParent) { \r\n  imagesScanned.push(imgObj);\r\n  var imgSrc = imgObj.datatype == com_asprise_scan_datatype_BASE64 ?\r\n'data:' + imgObj.mimetype + ';base64,' + imgObj.data : imgObj.data;\r\n  var elementImg = createDomElementFromModel({\r\n'name': 'img',\r\n'attributes': {\r\n  'class': 'scanned',\r\n  'src': imgSrc,\r\n  'height': '100',\r\n  'class': 'zoom'\r\n}\r\n  });\r\n  domParent.appendChild(elementImg);\r\n}\r\nThe addImage function creates a new <img> element for every image scanned:\r\n \r\nImage and thumbnail objects returned from the scan dialog have the following properties:\r\nName\tValues\tRemarks\r\ndatatype\tcom_asprise_scan_datatype_BASE64\r\ncom_asprise_scan_datatype_URL\tEither base64 or url\r\nmimetype\timage/jpeg\r\nimage/tiff\r\napplication/pdf\t\r\ndata\tThe actual data of the datatype\t\r\nThe HTML code:\r\n<form id=\"form1\" action=\"http://asprise.com/scan/applet/upload.php?action=dump\" method=\"POST\" enctype=\"multipart/form-data\" target=\"_blank\">\r\n    <label for=\"field1\" style=\"display: inline-block; width: 150px; text-align: right;\">Field 1</label>\r\n    <input id=\"field1\" name=\"field1\" type=\"text\" value=\"value 1\"/>\r\n    <br><span style=\"height: 4px;\"></span><br>\r\n\r\n    <label style=\"display: inline-block; width: 150px; text-align: right;\">Documents</label>\r\n    <button type=\"button\" onclick=\"scan();\">Scan</button>\r\n\r\n    <div id=\"images\" style=\"margin-left: 154px; margin-top: 10px;\">\r\n    </div>\r\n\r\n    <input type=\"button\" value=\"Submit form\" onclick=\"submitForm1();\" style=\"margin-left: 154px; margin-top: 20px;\">\r\n</form>\r\n## 2.5\tUpload the images scanned through form\r\nWhen the user clicks on the ‘Submit form’ button, the following JavaScript function will be invoked:\r\nfunction submitForm1() {\r\n  com_asprise_scan_submit_form_with_images('form1', imagesScanned,  \r\n    function(xhr) {\r\n      if(xhr.readyState == 4) { // 4: request finished                          \r\n        // todo process response: xhr.responseText\r\n      }\r\n    });\r\n}\r\nRemember imagesScanned contains all the images that have been scanned. All fields in the form with id ‘form1’ are submitted together with the scanned images.\r\n# 3\tAdvanced Usages\r\n## 3.1\tSimple scan\r\nWhen to use: In this mode, the Swing based dialog will not be shown and only a system UI scan will show up. Once the scan is done, the user does not have an opportunity to edit the image as it will be returned directly to the callback function.\r\nHow to use:\r\ncom_asprise_scan_request(myCallBackFunc,   \r\n  com_asprise_scan_cmd_method_SIMPLE_SCAN, // method: simple scan\r\n  com_asprise_scan_cmd_return_IMAGES_AND_THUMBNAILS, null);\r\n## 3.2\tScan and upload with the scan dialog\r\nWhen to use: you need to have scanned images upload directly to a webserver or the user uses a legacy browser that does not support BASE64 as image source.\r\nHow to use:\r\ncom_asprise_scan_request(myCallBackFunc,   \r\n  com_asprise_scan_cmd_method_SCAN_THEN_UPLOAD, // scan and upload\r\n  com_asprise_scan_cmd_return_IMAGES_AND_THUMBNAILS, {\r\n   'upload-url': 'YOUR_URL_WHICH_CAN_BE_FORMED_DYNAMICALLY'\r\n  }\r\n);\r\nThe user will see the following buttons:\r\n \r\nOnce the user clicks on ‘Upload selected’, the response returned upon uploading will be available in the mesg parameter of the callback function:\r\nfunction myCallBackFunc(success, mesg, thumbs, images)\r\nTips:\r\n•\tConsider to return and display the URLs of the upload images so that the user can click to verify;\r\n•\tYou may request the dialog to return thumbnails to be displayed on your web page;\r\n•\tYou may use the following URL to test uploading: \r\nhttp://asprise.com/scan/applet/upload.php?action=upload (It will save any file posted and returns the URL as the response. The source code of this file is available at http://asprise.com/scan/applet/upload.php?action=source)\r\nBy default, images will be uploaded as JPG files.\r\n## 3.3\tScan and upload as PDF\r\nWhen to use: you need to have multiple images uploaded as a single PDF file to a web server.\r\nHow to use:\r\ncom_asprise_scan_request(myCallBackFunc,   \r\n  com_asprise_scan_cmd_method_SCAN_THEN_UPLOAD, // scan and upload\r\n  com_asprise_scan_cmd_return_IMAGES_AND_THUMBNAILS, {\r\n   'upload-url': 'YOUR_URL_WHICH_CAN_BE_FORMED_DYNAMICALLY',\r\n   'format': 'PDF'\r\n  }\r\n);\r\n## 3.4\tSupport for legacy browsers\r\nWhen to use: you have customers running on legacy browsers, for example IE 7.\r\nIE 7 does not support base64 as image source and IE 8 has a size limit for base64 data of 32kb. To support those legacy browsers, one can use an intermediate image server so that the scan dialog can upload images a to the image server and return URL of the images/thumbnails to JavaScript instead of base64.\r\nHow to use:\r\ncom_asprise_scan_request(myCallBackFunc,   \r\n  com_asprise_scan_cmd_method_SCAN_THEN_UPLOAD, // scan and upload\r\n  com_asprise_scan_cmd_return_IMAGES_AND_THUMBNAILS, {\r\n   'image-server-url': 'YOUR_URL_WHICH_CAN_BE_FORMED_DYNAMICALLY'\r\n  }\r\n);\r\nIf you do not specify one, the following URL will be used:\r\nhttp://asprise.com/scan/applet/upload.php?action=upload\r\nThe source code of sample implementation of the image server is available at http://asprise.com/scan/applet/upload.php?action=source\r\nThe image server accepts image files posted and output URLs in plain text with URLs separated by line break.\r\n## 3.5\tForce to return image/thumbnail as URLs instead of base64\r\nWhen to use: you want to handle images as URLs instead of base64 in JavaScript.\r\nFor non-legacy browsers, images and thumbnails will be passed to JavaScript in base64 data format. If you prefer to get images and thumbnails as URLs, you can use the following options:\r\nHow to use:\r\ncom_asprise_scan_request(myCallBackFunc,   \r\n  com_asprise_scan_cmd_method_SCAN, // scan\r\n  com_asprise_scan_cmd_return_IMAGES_AND_THUMBNAILS, {\r\n   'image-server-url': 'YOUR_URL_WHICH_CAN_BE_FORMED_DYNAMICALLY',\r\n   'preferred-datatype': 'url'\r\n  }\r\n);\r\nIf image-server-url is omitted, the following URL will be used:\r\nhttp://asprise.com/scan/applet/upload.php?action=upload\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}